akka {
  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

  diagnostics.checker.confirmed-typos = [
    "akka.actor.kryo"
  ]

  actor {
    provider = "cluster"

    allow-java-serialization = no

    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "com.lightbend.akka.bench.ddata.DDataHost$Added$" = kryo
    }

    # kryo for serialization for lazy reasons
    kryo  {
      type = "nograph"
      idstrategy = "explicit"
      buffer-size = 4096
      max-buffer-size = -1
      use-manifests = false
      use-unsafe = false
      post-serialization-transformations = "off"
      implicit-registration-logging = false
      kryo-trace = false

      mappings {
        "com.lightbend.akka.bench.ddata.DDataHost$Added$" = 20
      }
    }
  }

  remote {
    artery {
      enabled = on
      
      # !! IMPORTANT !!
      # the below are provided by root-application.conf on our cloud nodes, 
      # these values here serve only as local fallback
      canonical.hostname = "127.0.0.1"
      canonical.port = 2551
      # !! IMPORTANT !!
    }
  }

  cluster {
    # !! IMPORTANT !!
    # the below are provided by root-application.conf on our cloud nodes, 
    # these values here serve only as local fallback
    seed-nodes = [
      "akka://DistributedDataSystem@127.0.0.1:2551"
    ]
    # !! IMPORTANT !!

    distributed-data {
      # We want to be notified as quick as possible in the benchmark, so that we actually see
      # how long the dissemination takes and not this interval
      notify-subscribers-interval = 5 ms
    }

    downing-provider-class = "com.lightbend.akka.sbr.SplitBrainResolverProvider"

    split-brain-resolver.active-strategy = "keep-majority"
  }
}

bench.ddata {
  http-api.host = "localhost"
  http-api.port = 8080
}
