akka {

  loggers = [
    "akka.event.slf4j.Slf4jLogger"
  ]

  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = cluster
    allow-java-serialization = no

    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "com.lightbend.multidc.ReplicatedCounter$Incremented" = kryo
      "com.lightbend.multidc.ReplicatedCounter$ShardingEnvelope" = kryo
      "com.lightbend.multidc.ReplicatedCounter$Increment" = kryo
      "com.lightbend.multidc.ReplicatedCounter$IncrementAck$" = kryo
      "com.lightbend.multidc.ReplicatedCounter$Get$" = kryo

      "com.lightbend.multidc.ReplicatedIntrospector$Inspect" = kryo
      "com.lightbend.multidc.ReplicatedIntrospector$Append" = kryo
      "com.lightbend.multidc.ReplicatedIntrospector$Stored" = kryo
      "com.lightbend.multidc.ReplicatedIntrospector$AppliedSelf" = kryo
      "com.lightbend.multidc.ReplicatedIntrospector$AppliedReplicated" = kryo
    }

    # kryo for serialization for lazy reasons
    kryo {
      type = "nograph"
      idstrategy = "explicit"
      buffer-size = 4096
      max-buffer-size = -1
      use-manifests = false
      use-unsafe = false
      post-serialization-transformations = "off"
      implicit-registration-logging = false
      kryo-trace = false

      mappings {
        "com.lightbend.multidc.ReplicatedCounter$Incremented" = 20
        "com.lightbend.multidc.ReplicatedCounter$ShardingEnvelope" = 21
        "com.lightbend.multidc.ReplicatedCounter$Increment" = 22
        "com.lightbend.multidc.ReplicatedCounter$IncrementAck$" = 23
        "com.lightbend.multidc.ReplicatedCounter$Get$" = 24

        "com.lightbend.multidc.ReplicatedIntrospector$Inspect" = 30
        "com.lightbend.multidc.ReplicatedIntrospector$Append" = 31
        "com.lightbend.multidc.ReplicatedIntrospector$Stored" = 32
        "com.lightbend.multidc.ReplicatedIntrospector$AppliedSelf" = 33
        "com.lightbend.multidc.ReplicatedIntrospector$AppliedReplicated" = 34
      }
    }
  }

  remote {
    //    netty.tcp {
    //      # going across DCs so need the external IP in the cloud
    //      hostname = "127.0.0.1"
    //      port = 2552
    //    }

    artery {
      enabled = on
      canonical.hostname = "127.0.0.1"
      canonical.port = 2552
    }
  }

  cluster {
    roles = [
    ]

    seed-nodes = [
      "akka://MultiDcSystem@127.0.0.1:2552"
    ]

    multi-data-center {
      self-data-center = "eu-west"

      speculative-replication.enabled = off
    }

    http.management {
      hostname = "0.0.0.0"
      port = 19999
    }
  }

  persistence {
    snapshot-store.plugin = "cassandra-snapshot-store"

    multi-data-center {
      all-data-centers = ["eu-central", "eu-west"]

      speculative-replication {
        enabled = on
      }
    }
  }

}

multidc {
  port = 8080
  host = "0.0.0.0"
}

cassandra-journal-multi-dc {
  contact-points = [
    "localhost"
  ]
  log-queries = on
  write-consistency = "LOCAL_QUORUM"
  read-consistency = "LOCAL_QUORUM"
  enable-events-by-tag-query = off
}

cassandra-query-journal-multi-dc {
  contact-points = [
    "localhost"
  ]
  log-queries = on
  write-consistency = "LOCAL_QUORUM"
  read-consistency = "LOCAL_QUORUM"

  # Remove once we've fixed infrequent refresh
  refresh-interval = 30s
}

# eu-west specific replication settings
# it is used by eu-central when reading notifications and events from eu-west

cassandra-journal-multi-dc-eu-west-ignore = ${cassandra-journal-multi-dc} # include default settings
cassandra-journal-multi-dc-eu-west-ignore {

  query-plugin = "cassandra-query-journal-multi-dc-eu-west"

  port = 9042

  contact-points = [
    "localhost"
  ]

  log-queries = on
}

cassandra-query-journal-multi-dc-eu-west-ignore = ${cassandra-query-journal-multi-dc} # include default settings
cassandra-query-journal-multi-dc-eu-west-ignore {

  write-plugin = "cassandra-journal-multi-dc-eu-west"

  log-queries = on
}


# eu-central specific replication settings
# it is used by eu-west when reading notifications and events from eu-central

cassandra-journal-multi-dc-eu-central-ignore = ${cassandra-journal-multi-dc} # include default settings
cassandra-journal-multi-dc-eu-central-ignore {

  query-plugin = "cassandra-query-journal-multi-dc-eu-central"

  port = 9043

  contact-points = [
    "localhost"
  ]

  log-queries = on
}

cassandra-query-journal-multi-dc-eu-central-ignore = ${cassandra-query-journal-multi-dc} # include default settings
cassandra-query-journal-multi-dc-eu-central-ignore {

  write-plugin = "cassandra-journal-multi-dc-eu-central"

  log-queries = on
}
