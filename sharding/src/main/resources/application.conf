akka {
  loggers = ["akka.event.Logging$DefaultLogger"]
  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

  cluster {
    
    # !! IMPORTANT !!
    # the below are provided by root-application.conf on our cloud nodes, 
    # these values here serve only as local fallback
    seed-nodes = [
      "akka://cluster@127.0.0.1:2551",
      "akka://cluster@127.0.0.1:2552",
      "akka://cluster@127.0.0.1:2553"
    ]
    # !! IMPORTANT !!
    
    metrics.enabled = off

    sharding.role = "shard"
  }

  actor {
    provider = cluster


    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "com.lightbend.akka.bench.sharding.BenchEntity$Ping" = kryo
      "com.lightbend.akka.bench.sharding.BenchEntity$PersistAndPing" = kryo
      "com.lightbend.akka.bench.sharding.BenchEntity$Pong" = kryo
      "com.lightbend.akka.bench.sharding.PersistenceHistograms$PrintHistograms$" = kryo

      // persisted events
      "com.lightbend.akka.bench.sharding.BenchEntity$PingObserved" = kryo
    }

    # kryo for serialization for lazy reasons
    kryo  {
      type = "nograph"
      idstrategy = "explicit"
      buffer-size = 4096
      max-buffer-size = -1
      use-manifests = false
      use-unsafe = false
      post-serialization-transformations = "off"
      implicit-registration-logging = false
      kryo-trace = false

      mappings {
        // messages
        "com.lightbend.akka.bench.sharding.BenchEntity$Ping" = 20
        "com.lightbend.akka.bench.sharding.BenchEntity$PersistAndPing" = 21
        "com.lightbend.akka.bench.sharding.BenchEntity$Pong" = 22
        "com.lightbend.akka.bench.sharding.PersistenceHistograms$PrintHistograms$" = 23

        // persisted events
        "com.lightbend.akka.bench.sharding.BenchEntity$PingObserved" = 30
      }


    }
  }

  remote {
    artery {
      enabled = on
      
      # !! IMPORTANT !!
      # the below are provided by root-application.conf on our cloud nodes, 
      # these values here serve only as local fallback
      canonical.hostname = "127.0.0.1"
      canonical.port = 0
      # !! IMPORTANT !!
    }
  }


  persistence.journal.plugin = "cassandra-journal"
  persistence.snapshot-store.plugin = "cassandra-snapshot-store"

}

# benchmark config
shard-bench {
  unique-entities = 10000
  number-of-pings = 50000
  // for reference: local cassandra max throughput somewhere at 1000 writes/s on both my mbp and imac
  pings-per-second = 800
  number-of-shards = 100
  total-nodes = 1
}

